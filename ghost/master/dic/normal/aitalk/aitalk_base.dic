//******************************************************************************
// トーク辞書
//******************************************************************************


//******************************************************************************
// ランダムトーク
//******************************************************************************
RandomTalk
{
	TOSTR(EVAL(CHR(0x22)+RandomTalkEx()+CHR(0x22)))
}

//------------------------------------------------------------------------------
//ランダムトーク本体：この中にランダムトークを記載してください
//ここのみ常に ' ' で括って書いてください。
//上のRandomTalkの中身で%( )を展開していますので、" "を使わなくてもOKです。
//高速化対策
//------------------------------------------------------------------------------
RandomTalkEx : nonoverlap
{
	'\0リンプって悪い悪いって言われるけどさ。\n/
	案外対処が難しいんだよね。\n/
	リンプに対してレイズした時の相手のフォールド頻度によって、適切なレイズ頻度も変わってきちゃうからさ。\e'

	'\0プリフロップが一番大事だよ。\n/
	EVロスはそんなに大きくならないけど、一番プレイする頻度は高いから。\n/
	塵も積もれば山となる、ってね。\e'




	/*
	//チェイン起動サンプル
	'\0\s[0]これはトークチェインのテストです。\n\w5しりとりでもしますか。\w8\1\s[10]よし。\n\n\w5「ありあ」。\e:chain=siritori'
	*/
}

//------------------------------------------------------------------------------
//チェイントークのサンプル
//------------------------------------------------------------------------------
/*
siritori
{{CHAIN
	'\0\s[6]ありあ、ね。あ、か‥‥。\n\w6「あんこ」。\e'
	{
		'\1\s[10]こ‥‥「ころんぶす」。\w8\0\s[2]渋ッ！\e'
		'\1\s[11]「コチュジャン」！\w6\0\s[5]はいマック朗の負けー。\e:chain=siritori_end'
	}
	'\0\s[6]す‥‥\w4す‥‥\w9「すみそ」。\w8\1\s[10]おまえこそ渋いな。\nそ\w5‥\w5‥\w9「ソヴィエト」。\e'
	'\0\s[5]ところてん！\w9\n\n‥\w4‥\w4\s[4]あ。\1\s[10]はいおれの勝ちー。\w9\0\n\nぅー。\e'
}}CHAIN

siritori_end
{{CHAIN
	'\1\s[10]‥\w5‥\w5なんかすごく切ない負け方をした気がするな。\w8\0\s[5]えへへー。\e'
}}CHAIN
*/

//******************************************************************************
//キーが押された
//******************************************************************************
/*
//------------------------------------------------------------------------------
//OnKeyPressイベント
//------------------------------------------------------------------------------
//キーボードの任意のキーが押されたときに発動するイベントです。
//ファンクションキーを指定するときは、'f1'等と指定します。
//押されたキーはreference0に格納されます。
//if文、もしくはcase~when文で分岐させると良いでしょう。
*/

OnKeyPress
{
	case reference0 {
		when 'a' {
			'\u\s[10]\0\s[5]えー。\w8\1アップルのAだな。\w8\0\s[1]\n\nえー。\w8\1\n\n‥\w5‥\w5やかましい。\e'
		}
		when 'y' {
			'\u\s[10]\0\s[5]YAYAのYだね。\w8\1YAYAって何回も書いてると、ゲシュタルト崩壊起こすぞ。\w8\0\s[1]\n\n‥\w5‥\w5なぁに、それ。\w8\1\n\n文字に見えなくなるって事だ。\w8\0\s[2]\n\nマック朗、物知りだねー。\e'
		}
		when 'f1' {
			'\u\s[10]\0\s[5]ふぁ～\w5はふぁんくしょんの～ふぁ～♪\w8\1そりゃそうだけど。\w8\0\s[4]\n\nふぁんくしょんっ！\w8\1\n\n‥\w5‥\w5ダジャレかい。\e'
		}
		when 't' {
			'\![raise,OnAiTalk]'
		}
		when 'r' {
			'\![reload,shiori](RELOAD SHIORI)'
		}
		when 'm' {
			if ISFUNC('OpenMenu') {
				OpenMenu
			}
			else {
				'\![raise,OnMouseDoubleClick,0,0,0,0,__SYSTEM_KEYDOWN_COL,0,mouse]'
			}
		}
	}
}

//******************************************************************************
//時報/重なり
//******************************************************************************

//------------------------------------------------------------------------------
//OnMinuteChangeイベント
//------------------------------------------------------------------------------

OnMinuteChange
{
	//---- 時間の分を見て 0 であれば時報。それ以外のときは重なり処理を行う

/*
	if minute == 0{
		//---- 分 = 0 だったので時報
		"\0\s[0]%(hour12)時です。"
		--
		//---- 特定の時間（正午など）ではさらに追加で話す
		if hour == 0{
			'\0\s[5]お昼です。\w8\1‥\w5‥\w5体内時計と脳味噌の修繕が必要みたいだな。\w8\0\s[2]\n\nや、やだなあもう。冗談だってば。\w8\1\n\n冗談に聞こえないんだよ。\e'
		}
		elseif hour == 1{
			'\0\s[3]ぷー‥\w5‥\w5\w8\1眠いか？\w8\0\n\nうん‥\w5‥\w5ちょっとね。\e'
		}
		elseif hour == 2 || hour == 3 || hour ==4{
			"\0\s[4]ふぷー‥\w5‥\w5ぷー‥\w5‥\w5‥\w5\w8\1‥\w5‥\w5寝ろよ。\w8\0\n\n%(username)‥\w5‥\w5起きてるから‥\w5‥\w5\w8\1\n\nつか、時報以外で元気になる癖に。\w8\0\n\nそれは言わない‥\w5‥\w5約束だよ、まっくろ‥\w5‥\w5\e"
		}
		elseif hour == 5 || hour == 17{
			'\0\s[5]５時だ♪\w5５時だ♪\w5５時だとメカ５時だ♪\w8\1‥\w5‥\w5なんだそりゃ。\e'
		}
		elseif hour == 6{
			'\0\s[5]あーたー\w5らしーいー\w5あーさが\1\s[11]歌うな！いろいろまずい！\e'
		}
		elseif hour == 7 || hour == 19{
			'\0\s[5]クイズです。\w9\n持ってると便利、けいたいでんわ。\w9\nさて何文字？\w8\1えーと、７文字？\w8\0\n\n答えはしちじです♪\w8\1\s[11]\n\n！\e'
		}
		elseif hour == 8 || hour == 20{
			"\0\s[5]%(username)、スポーツ観戦は静かにしなきゃだめですよ。\w8\1何をいきなり。\w8\0\s[1]\n\n８時過ぎだけに、やじの飛ばしすぎはいけません‥\w5‥\w5\w8\1\n\n‥\w5‥\w5ダジャレか。\e"
		}
		elseif hour == 9 || hour == 21{
			'\0\s[1]この時間、賭け事はだめですよ。\w8\1なんで。\w8\0\n\nくじだけに、貧乏くじを引いちゃいます。\w8\1\n\n‥\w5‥\w5時報のたびにダジャレはやめないか？\e'
		}
		elseif hour == 10{
			'\0\s[1]１０時のおやつって、困るよね。\w8\1なんで。\w8\0\n\nしっかり食べちゃうと、お昼が食べられなくなっちゃうの。\w8\1\n\n少しは脳味噌使えよ。\w8\0\n\nぷー。\e'
		}
		elseif hour == 12{
			'\n\nお昼ですよ、忙しくてもちゃんと食事を摂りましょうね。\w5\1\s[10]ん。'
		}
		elseif hour == 15{
			'\n\nおやつの時間です。\w5\1\s[10]ひと休みしようぜ。'
		}
		elseif hour == 18{
			"\0\s[0]マック朗、夕ご飯は何が食べたい？\w8\1%(ANY((food,me)))がいいかな。\w8\0\s[1]\n\n後悔しない？\w8\1\n\n‥\w5‥\w5どうだろうな。\e"
		}
		--
		'\e'
	}
	elseif AYATEMPLATE.mikireflag == 1{
		//---- 分 != 0 、かつ見切れていたら見切れ中のトークを行う
		MikireTalk
	}
	elseif reference[2] == 1{
		//---- 分 != 0 、かつ見切れておらず本体とkeroが重なっていたら重なり処理
		//---- 大抵はkero側を引き離す処理を行う
		'\0\s[0]重ならないでよっ。\1\s[10]ちぇー。\4\e'
	}
*/
}


//******************************************************************************
//見切れ
//******************************************************************************

//------------------------------------------------------------------------------
//OnSecondChangeイベント
//1 秒毎に実行される。ここではあまり重い処理を行わないこと
//このテンプレートでは、見切れ処理のみ行っている
//---------------------------------------------------------------------------
OnSecondChange
{

	if AYATEMPLATE.mikireflag == 1 && reference[1] == 0{
		//---- 見切れの終了
		EndMikireTalk
	}
	AYATEMPLATE.mikireflag = reference[1]
}

//------------------------------------------------------------------------------
//見切れ中
//------------------------------------------------------------------------------
MikireTalk
{
	'\0\s[0]見切れてます。\1\s[10]‥‥\e'
}

//------------------------------------------------------------------------------
//見切れ終了
//------------------------------------------------------------------------------
EndMikireTalk
{
	'\0\s[5]見切れから復帰ー。\w8\1随分嬉しそうだなぁ。\w8\0\n\nそりゃぁ、ね。\e:chain=mikirego'
}


//------------------------------------------------------------------------------
//見切れ後の初回のランダムトークは見切れ関連のトークを行う。
//これをチェインで実現している
//------------------------------------------------------------------------------
mikirego
{{CHAIN
	'\0\s[1]見切れするのと、終了されるのってどっちがマシだろうね。\w8\1見切れてても、そこにいろって言われる方が良いだろ。\w8\0\s[4]\n\nでも、中途半端に置いとかれるより、すっぱり終了してもらった方がー。\w8\1\n\nそんな事言うと、すっぱり消されちゃうぞ。\w8\0\s[3]\n\n‥\w5‥\w5それはいやだなぁ。\e'
	"\0\s[5]うん、見切れてないって素晴らしいね。\w8\1そんなもんかなぁ。\w8\0\s[6]\n\n%(username)、マック朗を１ドットくらい残して見切れさせてあげて。\w8\1\s[11]\n\nえ！？\e"
}}CHAIN

//******************************************************************************
//サーフィス復元
//******************************************************************************

//------------------------------------------------------------------------------
//OnSurfaceRestoreイベント
//------------------------------------------------------------------------------
OnSurfaceRestore
{
	'\0\s[0]\1\s[10]\e'
}

//******************************************************************************
//トランスレータ
//******************************************************************************

//------------------------------------------------------------------------------
//OnTranslateイベント
//------------------------------------------------------------------------------
//もっとも単純な例。語尾変え（「。」→「にゅ。」）。
//動かないようにコメントアウトしています。
/*
OnTranslate
{
	_text = reference[0]
	_text = REPLACE(_text, "。", "にゅ。")
	_text
}
*/

//------------------------------------------------------------------------------
//OnTranslateInternalイベント
//------------------------------------------------------------------------------
//OnTranslateがYAYA→本体→YAYAと、一度本体を経由するのに対して、
//OnTranslateInternalはYAYA内部でのトランスレートです。
//そのため、reference変数などが変更されない状態でこの関数に渡されます。
//引数は、_argv[0]が、本体に渡す寸前のトークの内容です。
//動かないようにコメントアウトしています。
/*
OnTranslateInternal
{
	_text = _argv[0]
	_text = REPLACE(_text, "。", "にゅ。")
	_text
}
*/
